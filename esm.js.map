{"version":3,"file":"esm.js","sources":["src/logger.js","src/object.js","src/population.js","src/stat.js","src/flag.js","src/environment.js","src/lru.js","src/router.js","src/airship.js","src/validators/core_validator.js","src/transformers/core_transformer.js","src/core.js","src/index.js"],"sourcesContent":["export let logger = x => {\n  // eslint-disable-next-line no-console\n  console.error(x)\n}\n\nexport function setLogger(fn) {\n  logger = fn\n}\n","import Ajv from 'ajv'\nimport ajvErrors from 'ajv-errors'\nimport md5 from 'md5'\nimport {logger} from './logger'\nimport stringify from 'fast-json-stable-stringify'\n\nconst SCHEMA = {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      pattern: '^([A-Z][a-zA-Z]*)+$',\n      maxLength: 50,\n      minLength: 1,\n      errorMessage: {\n        type:\n          'Entity type must be a string that starts with a capital letter like [C]ar or [U]ser',\n        maxLength:\n          'Entity type must be a non-empty string of 50 characters or less',\n        minLength:\n          'Entity type must be a non-empty string of 50 characters or less'\n      }\n    },\n    isGroup: {\n      type: 'boolean',\n      errorMessage: {\n        type: '`isGroup` must be a boolean'\n      }\n    },\n    id: {\n      type: ['string', 'integer'],\n      pattern: '^[ -~]+$',\n      maxLength: 250,\n      minLength: 1,\n      errorMessage: {\n        type:\n          \"An entity's `id` must be a string or integer. An integer `id` will be cast into a string.\",\n        maxLength:\n          \"An entity's `id` must be a non-empty string of 250 characters or less.\",\n        minLength:\n          \"An entity's `id` must be a non-empty string of 250 characters or less.\"\n      }\n    },\n    displayName: {\n      type: 'string',\n      maxLength: 250,\n      minLength: 1,\n      errorMessage: {\n        type: \"An entity's `displayName` must be a string\",\n        maxLength:\n          \"An entity's `displayName` must be a non-empty string of 250 characters or less.\",\n        minLength:\n          \"An entity's `displayName` must be a non-empty string of 250 characters or less.\"\n      }\n    },\n    attributes: {\n      type: 'object',\n      patternProperties: {\n        '^[a-zA-Z]$|^[a-zA-Z_]{0,48}[a-zA-Z]$': {\n          oneOf: [\n            {\n              type: 'string',\n              maxLength: 3000,\n              errorMessage: {\n                type:\n                  \"An entity's attribute value must be a string, boolean, or number.\",\n                maxLength:\n                  \"An entity's string attribute must be 3000 characters or less.\"\n              }\n            },\n            {\n              type: 'boolean',\n              errorMessage: {\n                type:\n                  \"An entity's attribute value must be a string, boolean, or number.\"\n              }\n            },\n            {\n              type: 'number',\n              errorMessage: {\n                type:\n                  \"An entity's attribute value must be a string, boolean, or number.\"\n              }\n            }\n          ],\n          errorMessage: {\n            oneOf:\n              \"An entity's attribute value must be a string, boolean, or number.\"\n          }\n        }\n      },\n      maxProperties: 100,\n      additionalProperties: false,\n      errorMessage: {\n        maxProperties: 'There can only be up to 100 attributes for an entity.',\n        additionalProperties:\n          'Each attribute must begin and end with an alphabet letter (a-z, A-Z). In between, allowed characters are a-z, A-Z, and \"_\". For example: isStudent or is_student. Preceding or trailing underscore is not allowed (i.e., _is_student or is_student_). Each attribute value must be a number, string or boolean.'\n      }\n    },\n    group: {\n      type: ['object', 'null'],\n      properties: {\n        type: {\n          type: 'string',\n          pattern: '^([A-Z][a-zA-Z]*)+$',\n          maxLength: 50,\n          minLength: 1,\n          errorMessage: {\n            type:\n              'Group type must be a string that starts with a capital letter like [C]arGroup or [U]serGroup. Camel casing is used to separate words.',\n            maxLength:\n              'Group type must be a non-empty string of 50 characters or less',\n            minLength:\n              'Group type must be a non-empty string of 50 characters or less'\n          }\n        },\n        isGroup: {\n          type: 'boolean',\n          enum: [true],\n          errorMessage: {\n            type: '`isGroup` must be a boolean',\n            enum: '`isGroup` must always be true for an group'\n          }\n        },\n        id: {\n          type: ['string', 'integer'],\n          pattern: '^[ -~]+$',\n          maxLength: 250,\n          minLength: 1,\n          errorMessage: {\n            type:\n              \"A group's `id` must be a string or integer. An integer `id` will be cast into a string.\",\n            maxLength:\n              \"A group's `id` must be a non-empty string of 250 characters or less.\",\n            minLength:\n              \"A group's `id` must be a non-empty string of 250 characters or less.\"\n          }\n        },\n        displayName: {\n          type: 'string',\n          maxLength: 250,\n          minLength: 1,\n          errorMessage: {\n            type: \"A group's `displayName` must be a string\",\n            maxLength:\n              \"A group's `displayName` must be a non-empty string of 250 characters or less.\",\n            minLength:\n              \"A group's `displayName` must be a non-empty string of 250 characters or less.\"\n          }\n        },\n        attributes: {\n          type: 'object',\n          patternProperties: {\n            '^[a-zA-Z]$|^[a-zA-Z_]{0,48}[a-zA-Z]$': {\n              oneOf: [\n                {\n                  type: 'string',\n                  maxLength: 3000,\n                  errorMessage: {\n                    type:\n                      \"A group's attribute value must be a string, boolean, or number.\",\n                    maxLength:\n                      \"A group's string attribute must be 3000 characters or less.\"\n                  }\n                },\n                {\n                  type: 'boolean',\n                  errorMessage: {\n                    type:\n                      \"A group's attribute value must be a string, boolean, or number.\"\n                  }\n                },\n                {\n                  type: 'number',\n                  errorMessage: {\n                    type:\n                      \"A group's attribute value must be a string, boolean, or number.\"\n                  }\n                }\n              ],\n              errorMessage: {\n                oneOf:\n                  \"A group's attribute value must be a string, boolean, or number.\"\n              }\n            }\n          },\n          maxProperties: 100,\n          additionalProperties: false,\n          errorMessage: {\n            additionalProperties:\n              'Each attribute must begin and end with an alphabet letter (a-z, A-Z). In between, allowed characters are a-z, A-Z, and \"_\". For example: isStudent or is_student. Preceding or trailing underscore is not allowed (i.e., _is_student or is_student_). Each attribute value must be a number, string or boolean.'\n          }\n        }\n      },\n      required: ['id'],\n      additionalProperties: false,\n      errorMessage: {\n        required: 'Each group must have an `id` field.',\n        additionalProperties:\n          'Allowed properties for a group are: `type`, `id`, `displayName`, `attributes`, and `isGroup`. `id` is required, rest are optional.'\n      }\n    }\n  },\n  required: ['id'],\n  additionalProperties: false,\n  errorMessage: {\n    type: 'An entity is represented using a dictionary',\n    required: 'Each entity must have an `id` field.',\n    additionalProperties:\n      'Allowed properties for an entity are: `type`, `id`, `displayName`, `attributes`, `group`, and `isGroup`. `id` is required, rest are optional.'\n  }\n}\n\nconst ajv = Ajv({allErrors: true, jsonPointers: true})\najvErrors(ajv)\nconst validate = ajv.compile(SCHEMA)\n\nexport const DEFAULT_ENTITY_TYPE = 'User'\n\nexport default class AirshipObject {\n  constructor(obj) {\n    let isValid = AirshipObject.isValidObject(obj)\n\n    if (!isValid) {\n      this.object = null\n      return\n    }\n\n    obj = AirshipObject._cloneObject(obj)\n    isValid = AirshipObject._fillInFields(obj)\n\n    if (!isValid) {\n      this.object = null\n      return\n    }\n\n    this.object = obj\n  }\n\n  static isValidObject(obj) {\n    let isValid = validate(obj)\n    if (!isValid) {\n      logger(validate.errors.map(e => e.message))\n    }\n\n    if (isValid) {\n      const isGroup = obj.isGroup !== undefined ? obj.isGroup : false\n      const type = obj.type !== undefined ? obj.type : DEFAULT_ENTITY_TYPE\n\n      const groupIndex = type.lastIndexOf('Group')\n      if (\n        groupIndex !== -1 &&\n        groupIndex === type.length - 'Group'.length &&\n        !isGroup\n      ) {\n        logger(\n          \"An entity's type that ends with `Group` must be a group entity and therefore has to have an explicit `isGroup: true` property\"\n        )\n        isValid = false\n      }\n    }\n\n    return isValid\n  }\n\n  static _cloneObject(obj) {\n    const clone = Object.assign({}, obj)\n\n    if (obj.attributes !== undefined) {\n      clone.attributes = Object.assign({}, obj.attributes)\n    }\n\n    if (obj.group !== undefined) {\n      clone.group = Object.assign({}, obj.group)\n\n      if (obj.group.attributes !== undefined) {\n        clone.group.attributes = Object.assign({}, obj.group.attributes)\n      }\n    }\n\n    return clone\n  }\n\n  static _fillInFields(obj) {\n    if (obj.type === undefined) {\n      obj.type = DEFAULT_ENTITY_TYPE\n    }\n\n    if (obj.displayName === undefined) {\n      obj.displayName = '' + obj.id\n    }\n\n    if (obj.isGroup === undefined) {\n      obj.isGroup = false\n    }\n\n    if (Number.isInteger(obj.id)) {\n      const idStr = '' + obj.id\n      if (idStr.length > 250) {\n        logger('Integer id must have 250 digits or less')\n        return false\n      }\n      obj.id = idStr\n    }\n\n    let group = null\n    if (obj.group !== undefined) {\n      group = obj.group\n    }\n\n    if (group !== null && group.displayName === undefined) {\n      group.displayName = '' + group.id\n    }\n\n    if (group !== null && group.type === undefined) {\n      group.type = obj.type + 'Group'\n    }\n\n    if (group !== null) {\n      group.isGroup = true\n    }\n\n    if (group !== null) {\n      if (Number.isInteger(group.id)) {\n        const idStr = '' + group.id\n        if (idStr.length > 250) {\n          logger('Integer id must have 250 digits or less')\n          return false\n        }\n        group.id = idStr\n      }\n    }\n\n    return true\n  }\n\n  getHash() {\n    return md5(\n      stringify({\n        ...this.object,\n        attributes: this.object.attributes || {},\n        group: {\n          ...this.object.group,\n          attributes: (this.object.group && this.object.group.attributes) || {}\n        }\n      })\n    )\n  }\n\n  getId() {\n    const obj = this.object\n    return `${obj.type}_${obj.id}`\n  }\n\n  isValid() {\n    return this.object !== null\n  }\n\n  getRawObject() {\n    return this.object\n  }\n\n  getObject() {\n    const obj = this.object\n    const clone = Object.assign({}, obj)\n    delete clone.group\n    return new AirshipObject(clone)\n  }\n\n  getGroup() {\n    const group = this.object.group || null\n    return group && new AirshipObject(group)\n  }\n}\n","import md5 from 'md5'\nimport {logger} from './logger'\n\nexport const RULE_TYPE_STRING = 'string'\nexport const RULE_TYPE_INT = 'int'\nexport const RULE_TYPE_FLOAT = 'float'\nexport const RULE_TYPE_BOOLEAN = 'boolean'\nexport const RULE_TYPE_DATE = 'date'\nexport const RULE_TYPE_DATETIME = 'datetime'\n\nexport const RULE_OPERATOR_IS = 'is'\nexport const RULE_OPERATOR_IS_NOT = 'is_not'\nexport const RULE_OPERATOR_IN = 'in'\nexport const RULE_OPERATOR_NOT_IN = 'not_in'\nexport const RULE_OPERATOR_LT = 'lt'\nexport const RULE_OPERATOR_LTE = 'lte'\nexport const RULE_OPERATOR_GT = 'gt'\nexport const RULE_OPERATOR_GTE = 'gte'\nexport const RULE_OPERATOR_FROM = 'from'\nexport const RULE_OPERATOR_UNTIL = 'until'\nexport const RULE_OPERATOR_AFTER = 'after'\nexport const RULE_OPERATOR_BEFORE = 'before'\n\nexport const getHashedValue = s => {\n  return (parseInt(md5(s), 16) * 1.0) / 340282366920938463463374607431768211455\n}\n\nexport default class Population {\n  constructor(population) {\n    this.population = population\n  }\n\n  static categorizeValueType(v) {\n    if (v === true || v === false) {\n      return 'boolean'\n    } else if (typeof v === 'number') {\n      if ((v + '').indexOf('.') >= 0) {\n        return 'float'\n      } else {\n        return 'int'\n      }\n    } else if (typeof v === 'string') {\n      const unixTimestamp = new Date(v).getTime()\n\n      if (!isNaN(unixTimestamp)) {\n        const isoFormat = new Date(v).toISOString()\n        const timeIndex = isoFormat.lastIndexOf('T00:00:00.000Z')\n        if (\n          timeIndex !== -1 &&\n          isoFormat.length - 'T00:00:00.000Z'.length === timeIndex\n        ) {\n          return 'date'\n        } else {\n          return 'datetime'\n        }\n      }\n\n      return 'string'\n    }\n    logger('Unexpected attribute value type encountered')\n    return null\n  }\n\n  _ruleMatches(rule, obj) {\n    const attributes = obj.attributes || {}\n\n    if (!attributes.hasOwnProperty(rule.attributeName)) {\n      return false\n    }\n\n    const v = attributes[rule.attributeName]\n    const attributeType = Population.categorizeValueType(v)\n\n    const numberTypes = [RULE_TYPE_INT, RULE_TYPE_FLOAT]\n\n    if (\n      numberTypes.indexOf(attributeType) !== -1 &&\n      numberTypes.indexOf(rule.attributeType) !== -1\n    ) {\n      // This is fine\n    } else if (attributeType !== rule.attributeType) {\n      return false\n    }\n\n    const targetVal = rule.value\n    const targetValList = rule.valueList\n    const op = rule.operator\n\n    if (attributeType === RULE_TYPE_STRING) {\n      if (op === RULE_OPERATOR_IS) {\n        return v === targetVal\n      } else if (op === RULE_OPERATOR_IS_NOT) {\n        return v !== targetVal\n      } else if (op === RULE_OPERATOR_IN) {\n        return targetValList.indexOf(v) !== -1\n      } else if (op === RULE_OPERATOR_NOT_IN) {\n        return targetValList.indexOf(v) === -1\n      } else {\n        logger('Invalid rule operator encountered')\n        return false\n      }\n    } else if (numberTypes.indexOf(attributeType) !== -1) {\n      if (op === RULE_OPERATOR_IS) {\n        return v === targetVal\n      } else if (op === RULE_OPERATOR_IS_NOT) {\n        return v !== targetVal\n      } else if (op === RULE_OPERATOR_IN) {\n        return targetValList.indexOf(v) !== -1\n      } else if (op === RULE_OPERATOR_NOT_IN) {\n        return targetValList.indexOf(v) === -1\n      } else if (op === RULE_OPERATOR_LT) {\n        return v < targetVal\n      } else if (op === RULE_OPERATOR_LTE) {\n        return v <= targetVal\n      } else if (op === RULE_OPERATOR_GT) {\n        return v > targetVal\n      } else if (op === RULE_OPERATOR_GTE) {\n        return v >= targetVal\n      } else {\n        logger('Invalid rule operator encountered')\n        return false\n      }\n    } else if (attributeType === RULE_TYPE_BOOLEAN) {\n      if (op === RULE_OPERATOR_IS) {\n        return v === targetVal\n      } else if (op === RULE_OPERATOR_IS_NOT) {\n        return v !== targetVal\n      } else {\n        logger('Invalid rule operator encountered')\n        return false\n      }\n    } else if (\n      attributeType === RULE_TYPE_DATE ||\n      attributeType === RULE_TYPE_DATETIME\n    ) {\n      const targetTime = targetVal && new Date(targetVal).getTime()\n      const targetTimeList =\n        targetValList && targetValList.map(tv => new Date(tv).getTime())\n      const vTime = new Date(v).getTime()\n\n      if (op === RULE_OPERATOR_IS) {\n        return vTime === targetTime\n      } else if (op === RULE_OPERATOR_IS_NOT) {\n        return vTime !== targetTime\n      } else if (op === RULE_OPERATOR_IN) {\n        return targetTimeList.indexOf(vTime) !== -1\n      } else if (op === RULE_OPERATOR_NOT_IN) {\n        return targetTimeList.indexOf(vTime) === -1\n      } else if (op === RULE_OPERATOR_FROM) {\n        return vTime >= targetTime\n      } else if (op === RULE_OPERATOR_UNTIL) {\n        return vTime <= targetTime\n      } else if (op === RULE_OPERATOR_AFTER) {\n        return vTime > targetTime\n      } else if (op === RULE_OPERATOR_BEFORE) {\n        return vTime < targetTime\n      } else {\n        logger('Invalid rule operator encountered')\n        return false\n      }\n    } else {\n      logger('Invalid attribute type encountered')\n      return false\n    }\n  }\n\n  getGateValues(obj, env, flag, sticky) {\n    const population = this.population\n    if (this.population.entityType !== obj.type) {\n      return {eligible: false}\n    }\n\n    const rules = population.rules\n\n    let matches = true\n\n    for (let i = 0; i < rules.length; i++) {\n      const r = rules[i]\n      matches = matches && this._ruleMatches(r, obj)\n    }\n\n    if (matches) {\n      const samplingHashKey = `SAMPLING:control_${flag.hashKey}:env_${\n        env.hashKey\n      }:rule_set_${this.population.hashKey}:client_object_${obj.type}_${obj.id}`\n\n      const hashedPercentage = getHashedValue(samplingHashKey)\n\n      if (\n        hashedPercentage <= this.population.percentage &&\n        this.population.percentage > 0\n      ) {\n        const splits = sticky\n          ? this.population.universes[\n              Math.max(Math.floor(hashedPercentage * 100) - 1, 0)\n            ]\n          : flag.splits\n        const splitsMap = {}\n        for (let i = 0; i < splits.length; i++) {\n          const split = splits[i]\n          splitsMap[split.treatmentId] = split\n        }\n\n        const allocationHashKey = `DISTRIBUTION:control_${flag.hashKey}:env_${\n          env.hashKey\n        }:client_object_${obj.type}_${obj.id}`\n\n        const allocationHashedPercentage = getHashedValue(allocationHashKey)\n\n        let trailingSum = 0.0\n\n        const treatments = flag.treatments.filter(t => !t.isOffTreatment)\n\n        let treatment = null\n        for (let i = 0; i < treatments.length; i++) {\n          const t = treatments[i]\n          if (splitsMap.hasOwnProperty(t.treatmentId)) {\n            trailingSum = parseFloat(\n              (trailingSum + splitsMap[t.treatmentId].percentage).toFixed(3)\n            )\n\n            if (allocationHashedPercentage <= trailingSum) {\n              treatment = t\n              break\n            }\n          }\n        }\n\n        return {treatment: treatment, eligible: true}\n      } else {\n        return {eligible: true}\n      }\n    } else {\n      return {eligible: false}\n    }\n  }\n}\n","const NS_PER_SEC = 1e9\n\nexport default class Stat {\n  static compactStats(stats) {\n    const groups = stats.reduce((groups, stat) => {\n      const key = [stat.name, stat.type].join(',')\n      groups[key] = groups[key] || []\n      groups[key].push(stat)\n      return groups\n    }, {})\n\n    return Object.values(groups).map(stats => {\n      const newStat = new Stat(stats[0].name, stats[0].type)\n      let totalDuration, totalCount\n      switch (newStat.type) {\n        case Stat.TYPE_DURATION:\n          totalDuration = stats.reduce(\n            (duration, stat) => duration + stat.averageDuration * stat.count,\n            0\n          )\n          totalCount = stats.reduce((count, stat) => count + stat.count, 0)\n          newStat.setAverageDuration(totalDuration / totalCount)\n          newStat.setCount(totalCount)\n          break\n        case Stat.TYPE_COUNT:\n          newStat.setCount(stats.reduce((count, stat) => count + stat.count, 0))\n          break\n      }\n      return newStat\n    })\n  }\n\n  constructor(name, type) {\n    const allowedTypes = [Stat.TYPE_DURATION, Stat.TYPE_COUNT]\n    if (allowedTypes.indexOf(type) === -1) {\n      throw 'Invalid stat type passed'\n    }\n    this.name = name\n    this.type = type\n\n    this.count = 0\n    this.startTime = null\n\n    this.averageDuration = 0\n  }\n\n  start() {\n    if (this.averageDuration !== 0) {\n      throw 'Duration already calculated'\n    }\n\n    if (this.startTime !== null) {\n      throw 'Stat start() already called'\n    }\n\n    this.startTime = process.hrtime()\n    return this\n  }\n\n  stop() {\n    if (this.averageDuration !== 0) {\n      throw 'Duration already calculated'\n    }\n\n    if (this.startTime === null) {\n      throw 'Stat start() has not been called'\n    }\n\n    const stopTime = process.hrtime(this.startTime)\n    this.averageDuration = stopTime[0] * NS_PER_SEC + stopTime[1]\n    this.count = 1\n    return this\n  }\n\n  setCount(n) {\n    this.count = n\n    return this\n  }\n\n  setAverageDuration(t) {\n    this.averageDuration = t\n    return this\n  }\n\n  getDuration() {\n    return this.averageDuration\n  }\n\n  getStatsObj() {\n    const statsObj = {\n      name: this.name\n    }\n    if (this.type === Stat.TYPE_DURATION) {\n      if (this.averageDuration !== 0) {\n        statsObj.duration = this.averageDuration\n        statsObj.unit = 'ns'\n        statsObj.count = this.count\n        return statsObj\n      }\n    } else if (this.type === Stat.TYPE_COUNT) {\n      statsObj.count = this.count\n      return statsObj\n    }\n    return null\n  }\n}\n\nStat.TYPE_DURATION = 'stat_type__duration'\nStat.TYPE_COUNT = 'stat_type__count'\n","import {logger} from './logger'\n\nexport default class Flag {\n  constructor(flag, delegate) {\n    if (typeof flag === 'string') {\n      this._isWild = true\n      this.flagName = flag\n    } else {\n      // These along with flag.flagType and flag.flagStatus\n      // should always be present\n      this.hashKey = flag.hashKey\n      this.flag = flag\n      this.codename = flag.codename\n\n      // Pass through fields\n      this.isPaused = flag.isPaused\n      this.offTreatment = flag.offTreatment\n      this.treatments = flag.treatments\n      this.treatmentsMap = flag.treatmentsMap\n      this.overrides = flag.overrides\n      this.populations = flag.populations\n      this.splits = flag.splits\n    }\n    this.delegate = delegate\n  }\n\n  isUncategorized() {\n    return Boolean(this._isWild) || this.flag.flagType === 'uncategorized'\n  }\n\n  isWild() {\n    return Boolean(this._isWild)\n  }\n\n  isArchived() {\n    return this.flag.flagStatus === 'archived'\n  }\n\n  setDelegate(delegate) {\n    this.delegate = delegate\n  }\n\n  getType() {\n    if (this._isWild) {\n      logger(\n        `Encountered uncategorized flag \"${\n          this.flagName\n        }\". Visit Airship web app to convert it to a real flag`\n      )\n      return 'uncategorized'\n    }\n\n    const flagType = this.flag.flagType\n\n    switch (flagType) {\n      case 'basic':\n        return 'basic'\n      case 'experiment':\n        return 'experiment'\n      case 'uncategorized':\n        return 'uncategorized'\n      default:\n        logger('Unexpected flag type encountered')\n        return null\n    }\n  }\n\n  getTreatment(obj) {\n    if (!this.delegate) {\n      throw 'Delegate not provided to flag'\n    }\n    return this.delegate.getTreatment(this, obj)\n  }\n\n  getPayload(obj) {\n    if (!this.delegate) {\n      throw 'Delegate not provided to flag'\n    }\n    return this.delegate.getPayload(this, obj)\n  }\n\n  isEligible(obj) {\n    if (!this.delegate) {\n      throw 'Delegate not provided to flag'\n    }\n    return this.delegate.isEligible(this, obj)\n  }\n\n  isEnabled(obj) {\n    if (!this.delegate) {\n      throw 'Delegate not provided to flag'\n    }\n    return this.delegate.isEnabled(this, obj)\n  }\n}\n","import {logger} from './logger'\nimport AirshipObject from './object'\nimport Population from './population'\nimport Stat from './stat'\nimport Flag from './flag'\n\nexport default class Environment {\n  identify(obj) {\n    this.object = obj\n  }\n\n  async maybeIngest() {}\n\n  _identifyObject(obj) {\n    const airshipObj =\n      obj instanceof AirshipObject ? obj : new AirshipObject(obj)\n\n    return airshipObj\n  }\n\n  _saveStat() {}\n\n  _saveExposure() {}\n\n  async publish(objs) {} // eslint-disable-line no-unused-vars\n\n  shutdown() {}\n\n  flag(flagName) {\n    const flag = this.router\n      ? this.router.getFlag(flagName)\n      : new Flag(flagName)\n    flag.setDelegate(this)\n    return flag\n  }\n\n  _getAllocation(flag, airshipObj) {\n    const offTreatment = flag.offTreatment\n\n    if (flag.isArchived()) {\n      logger(`The flag \"${flag.codename}\" has been archived`)\n      return {\n        treatment: offTreatment,\n        eligible: false\n      }\n    }\n\n    if (flag.isPaused) {\n      return {\n        treatment: offTreatment,\n        eligible: false\n      }\n    }\n\n    // If the airshipObj is not a valid obj,\n    // then return the offTreatment/false\n    if (!airshipObj) {\n      return {\n        treatment: offTreatment,\n        eligible: false\n      }\n    }\n\n    const id = airshipObj.getId()\n    const override = flag.overrides[id]\n\n    if (override) {\n      const treatment = flag.treatmentsMap[override.treatmentId]\n      return {\n        treatment: treatment,\n        eligible: !treatment.isOffTreatment,\n        fromOverride: true\n      }\n    }\n\n    const obj = airshipObj.getRawObject()\n    const useUniverses = flag.getType() === 'experiment'\n    const populations = flag.populations\n    let treatment = null\n    let eligible = false\n\n    for (let i = 0; i < populations.length; i++) {\n      const p = new Population(populations[i])\n      const gateValues = p.getGateValues(\n        obj,\n        this.router.getEnv(),\n        flag,\n        useUniverses\n      )\n      eligible = eligible || gateValues.eligible\n      if (gateValues.treatment) {\n        treatment = gateValues.treatment\n        break\n      }\n    }\n\n    return {\n      treatment: treatment || offTreatment,\n      eligible: eligible\n    }\n  }\n\n  _resolveAllocations(alloc1, alloc2) {\n    if (alloc1.fromOverride) {\n      return alloc1\n    }\n\n    if (alloc2.fromOverride) {\n      return alloc2\n    }\n\n    if (!alloc1.treatment.isOffTreatment) {\n      return alloc1\n    }\n\n    if (!alloc2.treatment.isOffTreatment) {\n      return alloc2\n    }\n\n    return alloc1\n  }\n\n  _getExposure(flag, airshipObj, alloc, methodCalled) {\n    const obj = airshipObj.getRawObject()\n    return {\n      flag: flag.codename,\n      type: obj.type,\n      id: obj.id,\n      treatment: alloc.treatment.codename,\n      methodCalled: methodCalled,\n      eligible: alloc.eligible,\n      timeExposed: new Date().toISOString()\n    }\n  }\n\n  getTreatment(flag, obj) {\n    const stat = new Stat('duration__get_treatment', Stat.TYPE_DURATION)\n    stat.start()\n    obj = obj || this.object\n\n    const airshipObj = this._identifyObject(obj)\n    if (!airshipObj.isValid() || flag.isUncategorized()) {\n      return 'off'\n    }\n\n    const allocation = this._getAllocation(flag, airshipObj)\n    const groupAllocation = this._getAllocation(flag, airshipObj.getGroup())\n\n    const finalAllocation = this._resolveAllocations(\n      allocation,\n      groupAllocation\n    )\n\n    const expo = this._getExposure(\n      flag,\n      airshipObj,\n      finalAllocation,\n      'get_treatment'\n    )\n    this._saveExposure(expo)\n\n    stat.stop()\n    this._saveStat(stat)\n    return finalAllocation.treatment.isGhost\n      ? (flag.offTreatment && flag.offTreatment.codename) || 'off'\n      : finalAllocation.treatment.codename\n  }\n\n  getPayload(flag, obj) {\n    const stat = new Stat('duration__get_payload', Stat.TYPE_DURATION)\n    stat.start()\n    obj = obj || this.object\n    const airshipObj = this._identifyObject(obj)\n    if (!airshipObj.isValid() || flag.isUncategorized()) {\n      return null\n    }\n\n    const allocation = this._getAllocation(flag, airshipObj)\n    const groupAllocation = this._getAllocation(flag, airshipObj.getGroup())\n\n    const finalAllocation = this._resolveAllocations(\n      allocation,\n      groupAllocation\n    )\n\n    const expo = this._getExposure(\n      flag,\n      airshipObj,\n      finalAllocation,\n      'get_payload'\n    )\n    this._saveExposure(expo)\n\n    stat.stop()\n    this._saveStat(stat)\n    return finalAllocation.treatment.isGhost\n      ? (flag.offTreatment && flag.offTreatment.payload) || null\n      : finalAllocation.treatment.payload\n  }\n\n  isEligible(flag, obj) {\n    const stat = new Stat('duration__is_eligible', Stat.TYPE_DURATION)\n    stat.start()\n    obj = obj || this.object\n\n    const airshipObj = this._identifyObject(obj)\n    if (!airshipObj.isValid() || flag.isUncategorized()) {\n      return false\n    }\n\n    const allocation = this._getAllocation(flag, airshipObj)\n    const groupAllocation = this._getAllocation(flag, airshipObj.getGroup())\n\n    const finalAllocation = this._resolveAllocations(\n      allocation,\n      groupAllocation\n    )\n\n    const expo = this._getExposure(\n      flag,\n      airshipObj,\n      finalAllocation,\n      'is_eligible'\n    )\n    this._saveExposure(expo)\n\n    stat.stop()\n    this._saveStat(stat)\n    return finalAllocation.eligible\n  }\n\n  isEnabled(flag, obj) {\n    const stat = new Stat('duration__is_enabled', Stat.TYPE_DURATION)\n    stat.start()\n    obj = obj || this.object\n\n    const airshipObj = this._identifyObject(obj)\n    if (!airshipObj.isValid() || flag.isUncategorized()) {\n      return false\n    }\n\n    const allocation = this._getAllocation(flag, airshipObj)\n    const groupAllocation = this._getAllocation(flag, airshipObj.getGroup())\n\n    const finalAllocation = this._resolveAllocations(\n      allocation,\n      groupAllocation\n    )\n\n    const expo = this._getExposure(\n      flag,\n      airshipObj,\n      finalAllocation,\n      'is_enabled'\n    )\n    this._saveExposure(expo)\n\n    stat.stop()\n    this._saveStat(stat)\n    return !finalAllocation.treatment.isOffTreatment\n  }\n}\n","// Based on https://chrisrng.svbtle.com/lru-cache-in-javascript\nclass LRUNode {\n  constructor(key, value) {\n    if (typeof key === 'undefined' || key === null) {\n      throw 'Cannot have an undefined or null key for a LRUNode'\n    }\n    if (typeof value === 'undefined' || value === null) {\n      throw 'Cannot have an undefined or null value for a LRUNode'\n    }\n    this.key = key\n    this.value = value\n    this.prev = null\n    this.next = null\n  }\n}\n\nexport default class LRU {\n  constructor(limit) {\n    this.size = 0\n    if (typeof limit === 'number') {\n      this.limit = limit\n    } else {\n      this.limit = 10\n    }\n    this.map = {}\n    this.head = null\n    this.tail = null\n  }\n\n  setHead(node) {\n    node.next = this.head\n    node.prev = null\n    if (this.head !== null) {\n      this.head.prev = node\n    }\n    this.head = node\n    if (this.tail === null) {\n      this.tail = node\n    }\n    this.size++\n    this.map[node.key] = node\n  }\n\n  set(key, value) {\n    const node = new LRUNode(key, value)\n    if (this.map[key]) {\n      this.map[key].value = node.value\n      this.remove(node.key)\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key]\n        this.size--\n        this.tail = this.tail.prev\n        this.tail.next = null\n      }\n    }\n    this.setHead(node)\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      const value = this.map[key].value\n      const node = new LRUNode(key, value)\n      this.remove(key)\n      this.setHead(node)\n      return value\n    } else {\n      // console.log('Key ' + key + ' does not exist in the cache.')\n      return null // Return null because null cannot be a LRUNode value\n    }\n  }\n\n  remove(key) {\n    const node = this.map[key]\n    if (node.prev !== null) {\n      node.prev.next = node.next\n    } else {\n      this.head = node.next\n    }\n    if (node.next !== null) {\n      node.next.prev = node.prev\n    } else {\n      this.tail = node.prev\n    }\n    delete this.map[key]\n    this.size--\n  }\n\n  removeAll(limit) {\n    this.size = 0\n    this.map = {}\n    this.head = null\n    this.tail = null\n    if (typeof limit === 'number') {\n      this.limit = limit\n    }\n  }\n\n  forEach(callback) {\n    let node = this.head\n    let i = 0\n    while (node) {\n      callback(node, i)\n      i++\n      node = node.next\n    }\n  }\n}\n","import Flag from './flag'\n\nexport default class Router {\n  constructor(gatingInfo) {\n    this.gatingInfo = gatingInfo\n    this.gatingInfoMap = this._getGatingInfoMap(this.gatingInfo)\n  }\n\n  _getGatingInfoMap(gatingInfo) {\n    const map = {}\n\n    const flags = gatingInfo.flags\n\n    for (let i = 0; i < flags.length; i++) {\n      const flag = Object.assign({}, flags[i])\n      if (flag.flagType === 'uncategorized' || flag.flagStatus === 'archived') {\n        map[flag.codename] = new Flag(flag)\n        continue\n      }\n\n      const overrides = flag.overrides\n      const overridesMap = {}\n\n      for (let j = 0; j < overrides.length; j++) {\n        const override = overrides[j]\n\n        overridesMap[`${override.entityType}_${override.entityId}`] = override\n      }\n\n      flag.overrides = overridesMap\n\n      const treatments = flag.treatments\n      const treatmentsMap = {}\n      let offTreatment = null\n\n      for (let k = 0; k < treatments.length; k++) {\n        const treatment = treatments[k]\n\n        treatmentsMap[treatment.treatmentId] = treatment\n\n        if (treatment.isOffTreatment) {\n          offTreatment = treatment\n        }\n      }\n\n      flag.treatments = treatments\n      flag.treatmentsMap = treatmentsMap\n      flag.offTreatment = offTreatment\n\n      map[flag.codename] = new Flag(flag)\n    }\n\n    return map\n  }\n\n  getIngestionMaxItem() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo) {\n      return sdkInfo.SDK_INGESTION_MAX_ITEMS\n    }\n    return null\n  }\n\n  getBrowserIngestionMaxItems() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo) {\n      return sdkInfo.SDK_BROWSER_INGESTION_MAX_ITEMS\n    }\n    return null\n  }\n\n  getIngestionInterval() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo) {\n      return sdkInfo.SDK_INGESTION_INTERVAL * 1000\n    }\n    return null\n  }\n\n  getBrowserIngestionInterval() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo) {\n      return sdkInfo.SDK_BROWSER_INGESTION_INTERVAL * 1000\n    }\n    return null\n  }\n\n  getShouldIngestObjects() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo && typeof sdkInfo.SDK_SHOULD_INGEST_OBJECTS === 'boolean') {\n      return sdkInfo.SDK_SHOULD_INGEST_OBJECTS\n    }\n    return null\n  }\n\n  getShouldIngestStats() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo && typeof sdkInfo.SDK_SHOULD_INGEST_STATS === 'boolean') {\n      return sdkInfo.SDK_SHOULD_INGEST_STATS\n    }\n    return null\n  }\n\n  getShouldIngestExposures() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo && typeof sdkInfo.SDK_SHOULD_INGEST_EXPOSURES === 'boolean') {\n      return sdkInfo.SDK_SHOULD_INGEST_EXPOSURES\n    }\n    return null\n  }\n\n  getShouldIngestFlags() {\n    const sdkInfo = this.gatingInfo.sdkInfo\n    if (sdkInfo && typeof sdkInfo.SDK_SHOULD_INGEST_FLAGS === 'boolean') {\n      return sdkInfo.SDK_SHOULD_INGEST_FLAGS\n    }\n    return null\n  }\n\n  getFlag(flagName) {\n    return this.gatingInfoMap[flagName] || new Flag(flagName)\n  }\n\n  getEnv() {\n    return this.gatingInfo.env\n  }\n\n  isLocallyConfigured() {\n    return this.getEnv().envKey === null\n  }\n}\n","import EventSource from 'eventsource'\nimport Environment from './environment'\nimport {logger} from './logger'\nimport LRU from './lru'\nimport Router from './router'\nimport Stat from './stat'\nimport {version} from '../package.json'\n\nimport * as http from 'http'\nimport * as https from 'https'\nimport * as URL from 'url'\n\n// Default API domain\nconst DEFAULT_API_DOMAIN = 'airshiphq.com'\n\n// Primary API endpoints\nconst IDENTIFY_ENDPOINT = `/v2/identify`\nconst GATING_INFO_ENDPOINT = `/v2/gating-info`\n\n// SSE API endpoints\nconst SSE_GATING_INFO_ENDPOINT = `/v2/sse-events`\n\n// Backup API URL & endpoint\nconst BACKUP_URL = 'https://backup-api.airshiphq.com'\nconst BACKUP_GATING_INFO_ENDPOINT = `${BACKUP_URL}/v2/gating-info`\n\nconst REQUEST_TIMEOUT = 10 * 1000\n\n// Default ingestion parameters\nconst DEFAULT_INGESTION_INTERVAL = 30\nconst DEFAULT_BROWSER_INGESTION_INTERVAL = 15\nconst DEFAULT_INGESTION_MAX_ITEMS = 500\nconst DEFAULT_BROWSER_INGESTION_MAX_ITEMS = 5\n\nexport default class Airship extends Environment {\n  constructor(gatingInfoListener) {\n    super()\n\n    this.gatingInfoListener = gatingInfoListener\n    this.init()\n  }\n\n  init() {\n    this.ingestionMaxItems = DEFAULT_INGESTION_MAX_ITEMS\n    this.ingestionInterval = DEFAULT_INGESTION_INTERVAL * 1000\n\n    // eslint-disable-next-line no-undef\n    if (__BROWSER__) {\n      this.ingestionMaxItems = DEFAULT_BROWSER_INGESTION_MAX_ITEMS\n      this.ingestionInterval = DEFAULT_BROWSER_INGESTION_INTERVAL * 1000\n    }\n\n    this.objects = []\n    this.stats = []\n    this.exposures = []\n    this.flags = new Set()\n    this.oldFlags = new Set()\n\n    this.objectLRUCache = new LRU(500)\n    this.firstIngestion = true\n\n    this.shouldIngestObjects = true\n    this.shouldIngestStats = true\n    this.shouldIngestExposures = true\n    this.shouldIngestFlags = true\n\n    this.restartIngestionWorker()\n  }\n\n  restartIngestionWorker() {\n    if (this.ingestionWorker) {\n      clearInterval(this.ingestionWorker)\n    }\n\n    this.ingestionWorker = setInterval(() => {\n      this.maybeIngest(true)\n    }, this.ingestionInterval)\n  }\n\n  async maybeIngest(force = false) {\n    if (!this.shouldIngestObjects) {\n      this.objects = []\n    }\n\n    if (!this.shouldIngestStats) {\n      this.stats = []\n    }\n\n    if (!this.shouldIngestExposures) {\n      this.exposures = []\n    }\n\n    if (!this.shouldIngestFlags) {\n      this.flags = new Set()\n    }\n\n    let shouldIngest =\n      force ||\n      (this.objects.length >= this.ingestionMaxItems ||\n        this.stats.length >= this.ingestionMaxItems ||\n        this.exposures.length >= this.ingestionMaxItems ||\n        this.flags.size > 0)\n\n    if (this.firstIngestion) {\n      shouldIngest = shouldIngest || this.objects.length > 0\n      this.firstIngestion = !shouldIngest\n    }\n\n    if (\n      this.objects.length === 0 &&\n      this.stats.length === 0 &&\n      this.exposures.length === 0 &&\n      this.flags.size === 0\n    ) {\n      shouldIngest = false\n    }\n\n    if (shouldIngest) {\n      const objects = this.objects\n      const stats = this.stats\n      const exposures = this.exposures\n      const flags = Array.from(this.flags)\n      flags.forEach(flagName => {\n        this.oldFlags.add(flagName)\n      })\n\n      this.objects = []\n      this.stats = []\n      this.exposures = []\n      this.flags = new Set()\n\n      await this.postContent(\n        this.primaryServerUrl + IDENTIFY_ENDPOINT + '/' + this.envKey,\n        JSON.stringify({\n          objects: objects,\n          stats: stats.map(s => s.getStatsObj()).filter(so => so !== null),\n          exposures: exposures,\n          flags: flags,\n          sdkInfo: {\n            name: '__SDK_NAME__',\n            version: version\n          }\n        })\n      ).catch(err => {\n        logger(err)\n      })\n    }\n  }\n\n  _identifyObject(obj) {\n    const airshipObj = Environment.prototype._identifyObject.call(this, obj)\n\n    if (!airshipObj.isValid()) {\n      return airshipObj\n    }\n    const id = airshipObj.getId()\n    const hash = airshipObj.getHash()\n    const storedHash = this.objectLRUCache.get(id)\n    if (storedHash === null || hash !== storedHash) {\n      this.objects.push(airshipObj.getRawObject())\n    }\n\n    this.objectLRUCache.set(id, hash)\n    this.maybeIngest()\n\n    return airshipObj\n  }\n\n  _compactStats() {\n    this.stats = Stat.compactStats(this.stats)\n  }\n\n  _saveStat(stat) {\n    this.stats.push(stat)\n    if (this.stats.length >= this.ingestionMaxItems) {\n      this._compactStats()\n    }\n    this.maybeIngest()\n  }\n\n  _saveExposure(expo) {\n    this.exposures.push(expo)\n    this.maybeIngest()\n  }\n\n  async publish(objs) {\n    if (!Array.isArray(objs)) {\n      logger('The \"publish\" method takes an array of objects (aka entities).')\n      return\n    }\n\n    objs.forEach(obj => {\n      this._identifyObject(obj)\n    })\n\n    await this.maybeIngest(true)\n  }\n\n  getContent(url, timeout = REQUEST_TIMEOUT) {\n    return new Promise((resolve, reject) => {\n      const urlObj = URL.parse(url)\n\n      const lib = urlObj.protocol === 'https:' ? https : http\n\n      const request = lib.get(url, response => {\n        if (response.statusCode < 200 || response.statusCode > 299) {\n          reject('Failed to load page, status code: ' + response.statusCode)\n        }\n        const body = []\n\n        response.on('data', chunk => body.push(chunk))\n\n        response.on('end', () => {\n          resolve(body.join(''))\n        })\n      })\n\n      request.on('error', err => reject(err))\n\n      request.setTimeout(timeout, () => {\n        request.abort()\n        reject('Request timed out')\n      })\n    })\n  }\n\n  postContent(\n    url,\n    data,\n    contentType = 'application/json',\n    timeout = REQUEST_TIMEOUT\n  ) {\n    return new Promise((resolve, reject) => {\n      const urlObj = URL.parse(url)\n\n      const lib = urlObj.protocol === 'https:' ? https : http\n\n      const options = {\n        protocol: urlObj.protocol,\n        hostname: urlObj.hostname,\n        port: urlObj.port,\n        path: urlObj.path,\n        method: 'POST',\n        headers: {\n          'Content-Type': contentType,\n          'Content-Length': Buffer.byteLength(data)\n        }\n      }\n      const request = lib.request(options, response => {\n        if (response.statusCode < 200 || response.statusCode > 299) {\n          reject('Failed to post to url, status code: ' + response.statusCode)\n        }\n\n        const body = []\n\n        response.on('data', chunk => body.push(chunk))\n\n        response.on('end', () => resolve(body.join('')))\n      })\n\n      request.on('error', err => {\n        reject(err)\n      })\n\n      request.setTimeout(timeout, () => {\n        request.abort()\n        reject('Request timed out')\n      })\n\n      request.write(data)\n      request.end()\n    })\n  }\n\n  async _getGatingInfo() {\n    const body = await this.getContent(\n      `${this.primaryServerUrl}${GATING_INFO_ENDPOINT}/${\n        this.envKey\n      }?casing=camel`\n    )\n    return JSON.parse(body)\n  }\n\n  async _getBackupGatingInfo() {\n    const body = await this.getContent(\n      `${BACKUP_GATING_INFO_ENDPOINT}/${this.envKey}-camel`\n    )\n    return JSON.parse(body)\n  }\n\n  updateSDK() {\n    const ingestionMaxItems = this.router.getIngestionMaxItem()\n    const browserIngestionMaxItems = this.router.getBrowserIngestionMaxItems()\n    const ingestionInterval = this.router.getIngestionInterval()\n    const browserIngestionInterval = this.router.getBrowserIngestionInterval()\n    const shouldIngestObjects = this.router.getShouldIngestObjects()\n    const shouldIngestStats = this.router.getShouldIngestStats()\n    const shouldIngestExposures = this.router.getShouldIngestExposures()\n    const shouldIngestFlags = this.router.getShouldIngestFlags()\n\n    // eslint-disable-next-line no-undef\n    if (__BROWSER__) {\n      // Use SDK info's browserIngestionMaxItems threshold instead (if it exists)\n      if (\n        typeof browserIngestionMaxItems === 'number' &&\n        browserIngestionMaxItems > 0\n      ) {\n        this.ingestionMaxItems = browserIngestionMaxItems\n        this.restartIngestionWorker()\n      }\n\n      // Use SDK info's ingestionInterval instead (if it exists)\n      if (\n        typeof browserIngestionInterval === 'number' &&\n        browserIngestionInterval > 0 &&\n        browserIngestionInterval != this.ingestionInterval\n      ) {\n        this.ingestionInterval = browserIngestionInterval\n        this.restartIngestionWorker()\n      }\n    } else {\n      // Use SDK info's ingestionMaxItem threshold instead (if it exists)\n      if (typeof ingestionMaxItems === 'number' && ingestionMaxItems > 0) {\n        this.ingestionMaxItems = ingestionMaxItems\n        this.restartIngestionWorker()\n      }\n\n      // Use SDK info's ingestionInterval instead (if it exists)\n      if (\n        typeof ingestionInterval === 'number' &&\n        ingestionInterval > 0 &&\n        ingestionInterval != this.ingestionInterval\n      ) {\n        this.ingestionInterval = ingestionInterval\n        this.restartIngestionWorker()\n      }\n    }\n\n    // Check if SDK info directs SDK to ingest entities\n    if (typeof shouldIngestObjects === 'boolean') {\n      this.shouldIngestObjects = shouldIngestObjects\n    }\n\n    // Check if SDK info directs SDK to ingest stats\n    if (typeof shouldIngestStats === 'boolean') {\n      this.shouldIngestStats = shouldIngestStats\n    }\n\n    // Check if SDK info directs SDK to ingest exposures\n    if (typeof shouldIngestExposures === 'boolean') {\n      this.shouldIngestExposures = shouldIngestExposures\n    }\n\n    // Check if SDK info directs SDK to ingest flags\n    if (typeof shouldIngestFlags === 'boolean') {\n      this.shouldIngestFlags = shouldIngestFlags\n    }\n  }\n\n  async updateGatingInfo(statName, fetchFn) {\n    try {\n      const stat = new Stat(statName, Stat.TYPE_DURATION)\n      stat.start()\n      const result = await fetchFn()\n      const gatingInfo = result\n      this.router = new Router(gatingInfo)\n      this.updateSDK()\n      if (this.gatingInfoListener) {\n        this.gatingInfoListener(gatingInfo)\n      }\n      stat.stop()\n      this._saveStat(stat)\n    } catch (err) {\n      logger(err)\n\n      return false\n    }\n    return true\n  }\n\n  async configure(\n    envKey,\n    subscribeToUpdates = true,\n    apiDomain = DEFAULT_API_DOMAIN\n  ) {\n    const envKeyRegex = /^[a-z0-9]{16}$/\n    if (!envKey.match(envKeyRegex)) {\n      throw 'options[\"envKey\"] should be a string of lowercase characters and digits. Double check on the Airship web app.'\n    }\n\n    this.envKey = envKey\n    this.subscribeToUpdates = subscribeToUpdates\n\n    this.primaryServerUrl = `https://api.${apiDomain}`\n    this.sseServerUrl = `https://sse.${apiDomain}`\n\n    this.init()\n\n    this.failed = false\n\n    // First try the Airship server\n    if (\n      !(await this.updateGatingInfo(\n        'duration__gating_info',\n        this._getGatingInfo.bind(this)\n      ))\n    ) {\n      // Then try the Airship CloudFront distribution\n      this.failed = !(await this.updateGatingInfo(\n        'duration__cloudfront_gating_info',\n        this._getBackupGatingInfo.bind(this)\n      ))\n    }\n\n    if (this.failed) {\n      throw 'Failed to retrieve initial gating information'\n    }\n\n    if (subscribeToUpdates) {\n      this._subscribeToUpdates()\n      this._policeSSE()\n    }\n  }\n\n  async shutdown() {\n    if (this.ingestionWorker) {\n      clearInterval(this.ingestionWorker)\n    }\n\n    this._unpoliceSSE()\n    this._unsubscribeFromUpdates()\n\n    await this.maybeIngest(true)\n  }\n\n  flag(flagName) {\n    const flag = Environment.prototype.flag.call(this, flagName)\n    if (flag.isWild()) {\n      // Register the new uncategorized flag\n      if (!this.oldFlags.has(flagName)) {\n        this.flags.add(flagName)\n        this.maybeIngest()\n      }\n    }\n    return flag\n  }\n\n  _policeSSE() {\n    this._unpoliceSSE()\n    this.policeSSEInterval = setInterval(() => {\n      const now = Date.now()\n      const then = this.lastSSEConnectTimestamp || 0\n      if ((now - then) / 1000 > 30) {\n        logger(\n          'Did not receive a keepalive for more than 30 seconds. Reconnecting.'\n        )\n        this._subscribeToUpdates()\n      }\n    }, 5 * 1000)\n\n    this.pollGatingInfoInterval = setInterval(() => {\n      const now = Date.now()\n      const then = this.lastSSEConnectTimestamp || 0\n      if ((now - then) / 1000 > 60) {\n        logger(\n          'Did not receive a keepalive for more than 30 seconds. Polling gating info.'\n        )\n        this.updateGatingInfo(\n          'duration__cloudfront_gating_info',\n          this._getBackupGatingInfo.bind(this)\n        ).then(\n          () => logger('Polled gating info from CloudFront'),\n          () => logger('Failed polling gating info from CloudFront')\n        )\n      }\n    }, 60 * 1000)\n  }\n\n  _unpoliceSSE() {\n    if (this.policeSSEInterval) {\n      clearInterval(this.policeSSEInterval)\n      delete this.policeSSEInterval\n\n      if (this.lastSSEConnectTimestamp) {\n        delete this.lastSSEConnectTimestamp\n      }\n    }\n\n    if (this.pollGatingInfoInterval) {\n      clearInterval(this.pollGatingInfoInterval)\n      delete this.pollGatingInfoInterval\n    }\n  }\n\n  _subscribeToUpdates() {\n    this._unsubscribeFromUpdates()\n\n    this.eventSource = new EventSource(\n      `${this.sseServerUrl}${SSE_GATING_INFO_ENDPOINT}?envkey=${\n        this.envKey\n      }&casing=camel`\n    )\n    this.eventSource.addEventListener('gatingInfoUpdate', evt => {\n      const gatingInfo = JSON.parse(evt.data)\n      this.router = new Router(gatingInfo)\n      this.updateSDK()\n      if (this.gatingInfoListener) {\n        this.gatingInfoListener(gatingInfo)\n      }\n      this.lastSSEConnectTimestamp = Date.now()\n    })\n\n    this.eventSource.addEventListener('keepalive', () => {\n      this.lastSSEConnectTimestamp = Date.now()\n    })\n  }\n\n  _unsubscribeFromUpdates() {\n    if (this.eventSource) {\n      this.eventSource.close()\n      delete this.eventSource\n    }\n  }\n}\n","import {logger} from '../logger'\nimport Ajv from 'ajv'\nimport ajvErrors from 'ajv-errors'\n\nconst SCHEMA = {\n  type: 'object',\n  patternProperties: {\n    '^.{1,150}$': {\n      type: 'object',\n      properties: {\n        whitelist: {\n          type: 'array',\n          items: {\n            type: ['integer', 'string'],\n            errorMessage: {\n              type:\n                'An ID can be a string or integer. Integer ID will be cast into a string.'\n            }\n          },\n          errorMessage: {\n            type: '`whitelist` must be an array of IDs (string|integer)'\n          }\n        },\n        blacklist: {\n          type: 'array',\n          items: {\n            type: ['integer', 'string'],\n            errorMessage: {\n              type:\n                'An ID can be a string or integer. Integer ID will be cast into a string.'\n            }\n          },\n          errorMessage: {\n            type: '`blacklist` must be an array of IDs (string|integer)'\n          }\n        },\n        population: {\n          type: 'array',\n          items: {\n            type: 'object',\n            properties: {\n              attribute: {\n                type: 'string',\n                maxLength: 50,\n                errorMessage: {\n                  type:\n                    'A population\\'s filter attribute must be a string of 50 characters or less. E.g., \"age\", \"height\", \"birthDate\", etc.',\n                  maxLength:\n                    'A population\\'s filter attribute must be a string of 50 characters or less. E.g., \"age\", \"height\", \"birthDate\", etc.'\n                }\n              },\n              operator: {\n                type: 'string',\n                enum: [\n                  'is',\n                  'is_not',\n                  'in',\n                  'not_in',\n                  'lt',\n                  'lte',\n                  'gt',\n                  'gte',\n                  'from',\n                  'until',\n                  'after',\n                  'before'\n                ],\n                errorMessage: {\n                  type:\n                    'A population\\'s filter operator must be a string and must be one of: [\"is\", \"is_not\", \"in\", \"not_in\", \"lt\", \"lte\", \"gt\", \"gte\", \"from\", \"until\", \"after\", \"before\"]',\n                  enum:\n                    'A population\\'s filter operator must be a string and must be one of: [\"is\", \"is_not\", \"in\", \"not_in\", \"lt\", \"lte\", \"gt\", \"gte\", \"from\", \"until\", \"after\", \"before\"]'\n                }\n              },\n              value: {\n                type: ['number', 'string', 'boolean', 'array'],\n                maxLength: 3000,\n                items: {\n                  oneOf: [\n                    {\n                      type: 'number',\n                      errorMessage: {\n                        type:\n                          \"A population's filter valueList must contain numbers or strings.\"\n                      }\n                    },\n                    {\n                      type: 'string',\n                      maxLength: 3000,\n                      errorMessage: {\n                        maxLength:\n                          'A string value for a population filter must be 3000 characters or less'\n                      }\n                    }\n                  ]\n                },\n                minItems: 1,\n                errorMessage: {\n                  type:\n                    \"A population's filter value is a number, string, or boolean or an array of numbers or strings.\",\n                  maxLength:\n                    'A string value for a population filter must be 3000 characters or less',\n                  minItems:\n                    \"A population's filter value must have at least one item if it is an array.\"\n                }\n              }\n            },\n            errorMessage: {\n              type:\n                'Each filter within a population is represented by an object of the form: {attribute: <attribute>, operator: <operator>, value/valueList: <value>/<valueList>}'\n            }\n          },\n          errorMessage: {\n            type:\n              '`population` must be an array of filters, each of the form: {attribute: <attribute>, operator: <operator>, value/valueList: <value>/<valueList>}'\n          }\n        },\n        sample: {\n          type: 'number',\n          minimum: 0.0,\n          maximum: 1.0,\n          errorMessage: {\n            type: '`sample` must be a float between 0.0 and 1.0, inclusive',\n            minimum: '`sample` must be between 0.0 and 1.0, inclusive',\n            maximum: '`sample` must be between 0.0 and 1.0, inclusive'\n          }\n        },\n        active: {\n          type: 'boolean',\n          errorMessage: {\n            type: '`active` must be a boolean'\n          }\n        }\n      },\n      additionalProperties: false,\n      errorMessage: {\n        type:\n          'flagConfig must be a dictionary of flag name keys to flag configuration values',\n        additionalProperties:\n          'Unexpected config option found. Please refer to the documentation.'\n      }\n    }\n  },\n  errorMessage: {\n    patternProperties: 'Flag name must be strings of up to 150 characters.'\n  }\n}\n\nconst ajv = Ajv({allErrors: true, jsonPointers: true})\najvErrors(ajv)\nconst validate = ajv.compile(SCHEMA)\n\nexport const isValidFlagConfig = flagConfig => {\n  const isValid = validate(flagConfig)\n  if (!isValid) {\n    logger(validate.errors.map(e => e.message))\n  }\n  return isValid\n}\n","import {logger} from '../logger'\nimport {isValidFlagConfig} from '../validators/core_validator'\nimport Population, {\n  RULE_TYPE_STRING,\n  RULE_TYPE_INT,\n  RULE_TYPE_FLOAT,\n  RULE_TYPE_BOOLEAN,\n  RULE_TYPE_DATE,\n  RULE_TYPE_DATETIME,\n  RULE_OPERATOR_IS,\n  RULE_OPERATOR_IS_NOT,\n  RULE_OPERATOR_IN,\n  RULE_OPERATOR_NOT_IN,\n  RULE_OPERATOR_LT,\n  RULE_OPERATOR_LTE,\n  RULE_OPERATOR_GT,\n  RULE_OPERATOR_GTE,\n  RULE_OPERATOR_FROM,\n  RULE_OPERATOR_UNTIL,\n  RULE_OPERATOR_AFTER,\n  RULE_OPERATOR_BEFORE\n} from '../population'\n\nconst RULE_TYPE_TO_ALLOWED_OPERATORS = {\n  [RULE_TYPE_STRING]: new Set([\n    RULE_OPERATOR_IS,\n    RULE_OPERATOR_IS_NOT,\n    RULE_OPERATOR_IN,\n    RULE_OPERATOR_NOT_IN\n  ]),\n  [RULE_TYPE_INT]: new Set([\n    RULE_OPERATOR_IS,\n    RULE_OPERATOR_IS_NOT,\n    RULE_OPERATOR_IN,\n    RULE_OPERATOR_NOT_IN,\n    RULE_OPERATOR_LT,\n    RULE_OPERATOR_LTE,\n    RULE_OPERATOR_GT,\n    RULE_OPERATOR_GTE\n  ]),\n  [RULE_TYPE_FLOAT]: new Set([\n    RULE_OPERATOR_IS,\n    RULE_OPERATOR_IS_NOT,\n    RULE_OPERATOR_IN,\n    RULE_OPERATOR_NOT_IN,\n    RULE_OPERATOR_LT,\n    RULE_OPERATOR_LTE,\n    RULE_OPERATOR_GT,\n    RULE_OPERATOR_GTE\n  ]),\n  [RULE_TYPE_BOOLEAN]: new Set([RULE_OPERATOR_IS, RULE_OPERATOR_IS_NOT]),\n  [RULE_TYPE_DATE]: new Set([\n    RULE_OPERATOR_IS,\n    RULE_OPERATOR_IS_NOT,\n    RULE_OPERATOR_IN,\n    RULE_OPERATOR_NOT_IN,\n    RULE_OPERATOR_FROM,\n    RULE_OPERATOR_UNTIL,\n    RULE_OPERATOR_AFTER,\n    RULE_OPERATOR_BEFORE\n  ]),\n  [RULE_TYPE_DATETIME]: new Set([\n    RULE_OPERATOR_IS,\n    RULE_OPERATOR_IS_NOT,\n    RULE_OPERATOR_IN,\n    RULE_OPERATOR_NOT_IN,\n    RULE_OPERATOR_FROM,\n    RULE_OPERATOR_UNTIL,\n    RULE_OPERATOR_AFTER,\n    RULE_OPERATOR_BEFORE\n  ])\n}\n\nexport const transformFlagConfig = flagConfig => {\n  if (!isValidFlagConfig(flagConfig)) {\n    return null\n  }\n\n  const flags = []\n  const keys = Object.keys(flagConfig)\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    const config = flagConfig[key]\n    const active = config.active !== undefined ? config.active : true\n    const flagInfo = {\n      flagType: 'basic',\n      hashKey: key,\n      isPaused: !active,\n      isWebAccessible: __BROWSER__, // eslint-disable-line no-undef\n      codename: key,\n      flagStatus: 'operational'\n    }\n    const whitelist = config.whitelist || []\n    const blacklist = config.blacklist || []\n    const blacklistSet = new Set(blacklist)\n    const filteredWhitelist = whitelist.filter(i => !blacklistSet.has(i))\n\n    flagInfo.treatments = [\n      {\n        treatmentId: 'off-treatment',\n        codename: 'off',\n        isControl: false,\n        isOffTreatment: true\n      },\n      {\n        treatmentId: 'on-treatment',\n        codename: 'on',\n        isControl: false,\n        isOffTreatment: false\n      }\n    ]\n\n    flagInfo.overrides = []\n\n    flagInfo.overrides = flagInfo.overrides.concat(\n      filteredWhitelist.map(i => ({\n        treatmentId: 'on-treatment',\n        entityType: 'User',\n        entityId: i.toString()\n      }))\n    )\n\n    flagInfo.overrides = flagInfo.overrides.concat(\n      blacklist.map(i => ({\n        treatmentId: 'off-treatment',\n        entityType: 'User',\n        entityId: i.toString()\n      }))\n    )\n\n    flagInfo.splits = [{treatmentId: 'on-treatment', percentage: 1}]\n\n    if (config.population) {\n      const rules = config.population || []\n      const ruleInfos = []\n\n      for (let j = 0; j < rules.length; j++) {\n        const r = rules[j]\n        let type\n        if (Array.isArray(r.value)) {\n          const types = new Set(\n            r.value.map(v => Population.categorizeValueType(v))\n          )\n\n          if (types.size != 1) {\n            logger(\n              \"Population's filter criteria each should have a singular value type. In other words, do not mix strings with numbers in the same array, for example.\"\n            )\n            return null\n          }\n\n          type = Array.from(types)[0]\n        } else {\n          type = Population.categorizeValueType(r.value)\n        }\n\n        const rInfo = {\n          attributeName: r.attribute,\n          attributeType: type,\n          operator: r.operator,\n          value: !Array.isArray(r.value) ? r.value : null,\n          valueList: !Array.isArray(r.value) ? null : r.value\n        }\n\n        if (!RULE_TYPE_TO_ALLOWED_OPERATORS[type].has(r.operator)) {\n          logger(\n            `Population's filter operator \\`${\n              r.operator\n            }\\` is not allowed for filter type \\`${type}\\``\n          )\n          return null\n        }\n\n        if (rInfo.valueList) {\n          if (\n            rInfo.operator !== RULE_OPERATOR_IN &&\n            rInfo.operator !== RULE_OPERATOR_NOT_IN\n          ) {\n            logger(\n              \"Population's filter operator must be `in` or `not_in` if the value is an array.\"\n            )\n            return null\n          }\n        } else {\n          if (\n            rInfo.operator === RULE_OPERATOR_IN &&\n            rInfo.operator === RULE_OPERATOR_NOT_IN\n          ) {\n            logger(\n              \"Population's filter operator must not be `in` or `not_in` if the value is a number, boolean or string.\"\n            )\n            return null\n          }\n        }\n\n        ruleInfos.push(rInfo)\n      }\n\n      flagInfo.populations = [\n        {\n          hashKey: 'population-1',\n          entityType: 'User',\n          percentage: config.sample || 0.0,\n          rules: ruleInfos,\n          universes: []\n        }\n      ]\n    } else {\n      flagInfo.populations = [\n        {\n          hashKey: 'population-1',\n          entityType: 'User',\n          percentage: config.sample || 0.0,\n          rules: [],\n          universes: []\n        }\n      ]\n    }\n\n    flags.push(flagInfo)\n  }\n\n  return {\n    flags: flags,\n    env: {\n      hashKey: 'env-1',\n      envKey: null\n    }\n  }\n}\n","import Environment from './environment'\nimport Router from './router'\nimport {transformFlagConfig} from './transformers/core_transformer'\n\nexport default class Core extends Environment {\n  async configure(flagConfig) {\n    const gatingInfo = transformFlagConfig(flagConfig)\n    if (gatingInfo === null) {\n      throw 'Failed to transform flagConfig into initial gating information'\n    }\n    this.router = new Router(gatingInfo)\n  }\n}\n","import {setLogger} from './logger'\nimport Airship from './airship'\nimport Core from './core'\n\nconst defaultEnv = new Core()\ndefaultEnv.configure({})\n\nexport class FlaggerBase {\n  constructor() {\n    this.gatingInfoListeners = []\n  }\n\n  static _isDict(obj) {\n    return obj !== undefined && obj !== null && obj.constructor === Object\n  }\n\n  async publish(objs) {\n    if (this.environment) {\n      await this.environment.publish(objs)\n    } else {\n      throw 'Airship must be configured first before `publish` can be called'\n    }\n  }\n\n  // This will allow for async/await\n  async configure(options) {\n    if (!FlaggerBase._isDict(options)) {\n      throw '<options> must be dictionary'\n    }\n\n    const envKey = options.envKey\n    const flagConfig = options.flagConfig\n\n    if (!envKey && !flagConfig) {\n      throw '<options> must contain envKey corresponding to an environment key or a flagConfig dictionary to configure locally'\n    }\n\n    const subscribeToUpdates =\n      options.subscribeToUpdates === false ? false : true\n\n    if (envKey) {\n      if (\n        this.environment &&\n        this.environment.envKey === envKey &&\n        this.environment.subscribeToUpdates === subscribeToUpdates &&\n        this.environment.environmentPromise &&\n        !this.environment.failed\n      ) {\n        await this.environment.environmentPromise\n      } else {\n        if (this.environment) {\n          await this.environment.shutdown()\n        }\n        this.environment = new Airship(this.handleGatingInfoUpdate.bind(this))\n        const promise = this.environment.configure(\n          envKey,\n          options.subscribeToUpdates,\n          options.apiDomain\n        )\n        this.environment.environmentPromise = promise\n        await promise\n      }\n    } else {\n      if (this.environment) {\n        await this.environment.shutdown()\n      }\n      this.environment = new Core()\n      await this.environment.configure(flagConfig)\n    }\n  }\n\n  async shutdown() {\n    if (this.environment) {\n      await this.environment.shutdown()\n      delete this.environment\n    } else {\n      throw 'Airship must be configured first before `shutdown` can be called'\n    }\n  }\n\n  flag(flagName) {\n    return (this.environment || defaultEnv).flag(flagName)\n  }\n\n  setErrorListener(fn) {\n    setLogger(fn)\n  }\n\n  handleGatingInfoUpdate(gatingInfo) {\n    this.gatingInfoListeners.forEach(listener => listener(gatingInfo))\n  }\n\n  addGatingInfoListener(listener) {\n    this.gatingInfoListeners.push(listener)\n  }\n\n  removeGatingInfoListener(listener) {\n    this.gatingInfoListeners = this.gatingInfoListeners.filter(\n      l => l !== listener\n    )\n  }\n\n  identify(obj) {\n    if (this.environment) {\n      this.environment.identify(obj)\n      this.environment._identifyObject(obj)\n      this.environment.maybeIngest(true)\n    } else {\n      throw 'Airship must be configured first before `identify` can be called'\n    }\n  }\n}\n\nconst Flagger = new FlaggerBase()\n\nexport default Flagger\n"],"names":["logger","x","console","error","setLogger","fn","SCHEMA","type","properties","pattern","maxLength","minLength","errorMessage","isGroup","id","displayName","attributes","patternProperties","oneOf","maxProperties","additionalProperties","group","enum","required","ajv","Ajv","allErrors","jsonPointers","ajvErrors","validate","compile","DEFAULT_ENTITY_TYPE","AirshipObject","constructor","obj","isValid","isValidObject","object","_cloneObject","_fillInFields","errors","map","e","message","undefined","groupIndex","lastIndexOf","length","clone","Object","assign","Number","isInteger","idStr","getHash","md5","stringify","getId","getRawObject","getObject","getGroup","RULE_TYPE_STRING","RULE_TYPE_INT","RULE_TYPE_FLOAT","RULE_TYPE_BOOLEAN","RULE_TYPE_DATE","RULE_TYPE_DATETIME","RULE_OPERATOR_IS","RULE_OPERATOR_IS_NOT","RULE_OPERATOR_IN","RULE_OPERATOR_NOT_IN","RULE_OPERATOR_LT","RULE_OPERATOR_LTE","RULE_OPERATOR_GT","RULE_OPERATOR_GTE","RULE_OPERATOR_FROM","RULE_OPERATOR_UNTIL","RULE_OPERATOR_AFTER","RULE_OPERATOR_BEFORE","getHashedValue","s","parseInt","Population","population","categorizeValueType","v","indexOf","unixTimestamp","Date","getTime","isNaN","isoFormat","toISOString","timeIndex","_ruleMatches","rule","hasOwnProperty","attributeName","attributeType","numberTypes","targetVal","value","targetValList","valueList","op","operator","targetTime","targetTimeList","tv","vTime","getGateValues","env","flag","sticky","entityType","eligible","rules","matches","i","r","samplingHashKey","hashKey","hashedPercentage","percentage","splits","universes","Math","max","floor","splitsMap","split","treatmentId","allocationHashKey","allocationHashedPercentage","trailingSum","treatments","filter","t","isOffTreatment","treatment","parseFloat","toFixed","NS_PER_SEC","Stat","compactStats","stats","groups","reduce","stat","key","name","join","push","values","newStat","totalDuration","totalCount","TYPE_DURATION","duration","averageDuration","count","setAverageDuration","setCount","TYPE_COUNT","allowedTypes","startTime","start","process","hrtime","stop","stopTime","n","getDuration","getStatsObj","statsObj","unit","Flag","delegate","_isWild","flagName","codename","isPaused","offTreatment","treatmentsMap","overrides","populations","isUncategorized","Boolean","flagType","isWild","isArchived","flagStatus","setDelegate","getType","getTreatment","getPayload","isEligible","isEnabled","Environment","identify","maybeIngest","_identifyObject","airshipObj","_saveStat","_saveExposure","publish","objs","shutdown","router","getFlag","_getAllocation","override","fromOverride","useUniverses","p","gateValues","getEnv","_resolveAllocations","alloc1","alloc2","_getExposure","alloc","methodCalled","timeExposed","allocation","groupAllocation","finalAllocation","expo","isGhost","payload","LRUNode","prev","next","LRU","limit","size","head","tail","setHead","node","set","remove","get","removeAll","forEach","callback","Router","gatingInfo","gatingInfoMap","_getGatingInfoMap","flags","overridesMap","j","entityId","k","getIngestionMaxItem","sdkInfo","SDK_INGESTION_MAX_ITEMS","getBrowserIngestionMaxItems","SDK_BROWSER_INGESTION_MAX_ITEMS","getIngestionInterval","SDK_INGESTION_INTERVAL","getBrowserIngestionInterval","SDK_BROWSER_INGESTION_INTERVAL","getShouldIngestObjects","SDK_SHOULD_INGEST_OBJECTS","getShouldIngestStats","SDK_SHOULD_INGEST_STATS","getShouldIngestExposures","SDK_SHOULD_INGEST_EXPOSURES","getShouldIngestFlags","SDK_SHOULD_INGEST_FLAGS","isLocallyConfigured","envKey","DEFAULT_API_DOMAIN","IDENTIFY_ENDPOINT","GATING_INFO_ENDPOINT","SSE_GATING_INFO_ENDPOINT","BACKUP_URL","BACKUP_GATING_INFO_ENDPOINT","REQUEST_TIMEOUT","DEFAULT_INGESTION_INTERVAL","DEFAULT_INGESTION_MAX_ITEMS","Airship","gatingInfoListener","init","ingestionMaxItems","ingestionInterval","objects","exposures","Set","oldFlags","objectLRUCache","firstIngestion","shouldIngestObjects","shouldIngestStats","shouldIngestExposures","shouldIngestFlags","restartIngestionWorker","ingestionWorker","clearInterval","setInterval","force","shouldIngest","Array","from","add","postContent","primaryServerUrl","JSON","so","version","catch","err","prototype","call","hash","storedHash","_compactStats","isArray","getContent","url","timeout","Promise","resolve","reject","urlObj","URL","lib","protocol","https","http","request","response","statusCode","body","on","chunk","setTimeout","abort","data","contentType","options","hostname","port","path","method","headers","Buffer","byteLength","write","end","_getGatingInfo","parse","_getBackupGatingInfo","updateSDK","browserIngestionMaxItems","browserIngestionInterval","updateGatingInfo","statName","fetchFn","result","configure","subscribeToUpdates","apiDomain","envKeyRegex","match","sseServerUrl","failed","bind","_subscribeToUpdates","_policeSSE","_unpoliceSSE","_unsubscribeFromUpdates","has","policeSSEInterval","now","then","lastSSEConnectTimestamp","pollGatingInfoInterval","eventSource","EventSource","addEventListener","evt","close","whitelist","items","blacklist","attribute","minItems","sample","minimum","maximum","active","isValidFlagConfig","flagConfig","RULE_TYPE_TO_ALLOWED_OPERATORS","transformFlagConfig","keys","config","flagInfo","isWebAccessible","blacklistSet","filteredWhitelist","isControl","concat","toString","ruleInfos","types","rInfo","Core","defaultEnv","FlaggerBase","gatingInfoListeners","_isDict","environment","environmentPromise","handleGatingInfoUpdate","promise","setErrorListener","listener","addGatingInfoListener","removeGatingInfoListener","l","Flagger"],"mappings":"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"}