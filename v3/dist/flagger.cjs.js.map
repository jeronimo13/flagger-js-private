{"version":3,"file":"flagger.cjs.js","sources":["../src/core/Store.js","../src/core/Flagger.js","../src/logger.js","../src/Flagger.js","../src/index.js"],"sourcesContent":["// Builtins and externals\n\n// Internals\n\nexport default class Store {\n  constructor() {\n\n    // Empty store\n    this.store = {}\n  }\n\n  get(key) {\n    if (key in this.store) {\n      return this.store[key]\n    } else {\n      throw new Error(`Key ${key} not in store`)\n    }\n  }\n\n  setGatingInfo(gatingInfo) {\n    const flagMap = this._getFlagMap(gatingInfo)\n    this.store['flags'] = flagMap\n\n    // Send signal?\n  }\n\n  // PRIVATE API\n\n  _getFlagMap(gatingInfo) {\n    const map = {}\n\n    const flags = gatingInfo.flags\n\n    for (let i = 0; i < flags.length; i++) {\n      const flag = Object.assign({}, flags[i])\n      if (flag.flagType === 'uncategorized' || flag.flagStatus === 'archived') {\n        map[flag.codename] = new Flag(flag)\n        continue\n      }\n\n      const overrides = flag.overrides\n      const overridesMap = {}\n\n      for (let j = 0; j < overrides.length; j++) {\n        const override = overrides[j]\n\n        overridesMap[`${override.entityType}_${override.entityId}`] = override\n      }\n\n      flag.overrides = overridesMap\n\n      const treatments = flag.treatments\n      const treatmentsMap = {}\n      let offTreatment = null\n\n      for (let k = 0; k < treatments.length; k++) {\n        const treatment = treatments[k]\n\n        treatmentsMap[treatment.treatmentId] = treatment\n\n        if (treatment.isOffTreatment) {\n          offTreatment = treatment\n        }\n      }\n\n      flag.treatments = treatments\n      flag.treatmentsMap = treatmentsMap\n      flag.offTreatment = offTreatment\n\n      map[flag.codename] = new Flag(flag)\n    }\n\n    return map\n  }\n\n}\n","import Store from './Store'\n\nexport default class Flagger {\n  // Public API\n\n  constructor() {\n    // Variable holding whether configuration is done\n    this.configurationComplete = false\n\n    // Instantiate an instance of Store\n    this.store = new Store()\n  }\n\n  // configure(flagConfig) {\n  //   // Set this in store\n\n  // }\n\n  // flag(flagName) {\n  //   // returns a flag\n  // }\n\n  // shutdown() {\n\n  // }\n\n  // publish(entities) {\n\n  // }\n\n  // identify(entity) {\n\n  // }\n}\n","const LEVELS = ['debug', 'info', 'warn', 'error'] // default is 'log'\n\nclass Logger {\n\n  constructor() {\n    this.validLevels = LEVELS\n  }\n\n  setLogLevel(level='error') {\n    if (LEVELS.indexOf(level) >= 0) {\n      this.validLevels = LEVELS.slice(LEVELS.indexOf(level), LEVELS.length)\n    }\n  }\n\n  debug(x) {\n    if (this.validLevels.includes('debug')) {\n      // eslint-disable-next-line no-console\n      console.debug(x)\n    }\n  }\n\n  info(x) {\n    if (this.validLevels.includes('info')) {\n      // eslint-disable-next-line no-console\n      console.info(x)\n    }\n  }\n\n  warn(x) {\n    if (this.validLevels.includes('warn')) {\n      // eslint-disable-next-line no-console\n      console.warn(x)\n    }\n  }\n\n  error(x) {\n    // eslint-disable-next-line no-console\n    console.error(x) // Always permit error logging\n  }\n\n  log(x) {\n    this.info(x)\n  }\n\n}\n\nconst _instance = new Logger()\n\nexport default _instance\n","// Builtins and externals\nimport axios from 'axios'\n\n// Internals\nimport FlaggerCore from './core/Flagger'\nimport logger from './logger'\n\nexport default class Flagger extends FlaggerCore {\n\n  // Public API\n\n\tconstructor() {\n    super()\n\n    logger.log('inited with logger')\n\n    axios.get('/')\n      .then((response) => {\n        logger.log(response)\n      })\n      .catch((error) => {\n        logger.log(error)\n      })\n\n    // subscribes to configuration complete signal / set configured compelte bool to true\n  }\n\n\techo(phrase) {\n\t\tlogger.log(phrase)\n\t}\n\n//   configure(options) {\n//     // SEND_SIGNAL: Start configuration...\n//   }\n\n//   flag(flagName) {\n//     // returns a flag\n//   }\n\n//   shutdown() {\n\n//   }\n\n//   publish(entities) {\n\n//   }\n\n//   identify(entity) {\n\n//   }\n}\n","import Flagger from './Flagger'\n\nconst _flagger = new Flagger()\n\nexport default _flagger\n"],"names":["Store","constructor","store","get","key","Error","setGatingInfo","gatingInfo","flagMap","_getFlagMap","map","flags","i","length","flag","Object","assign","flagType","flagStatus","codename","Flag","overrides","overridesMap","j","override","entityType","entityId","treatments","treatmentsMap","offTreatment","k","treatment","treatmentId","isOffTreatment","Flagger","configurationComplete","LEVELS","Logger","validLevels","setLogLevel","level","indexOf","slice","debug","x","includes","console","info","warn","error","log","_instance","FlaggerCore","logger","axios","then","response","catch","echo","phrase","_flagger"],"mappings":"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"}